[General]
network = cloudComputingNetwork


**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 700m
**.constraintAreaMaxZ = 0m
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true

**.updateInterval = 0.1s # test with 0s too, and let getCurrentPosition update the display string from a test module

**.host[0].mobility.typename = "TurtleMobility"


# Cloud message delay and power constumption
cloudComputingNetwork.cloud.sendMessagePowerSmart = 234
cloudComputingNetwork.cloud.sendMessagePowerComputer = 112
cloudComputingNetwork.cloud.receiveMessagePowerSmart = 431
cloudComputingNetwork.cloud.receiveMessagePowerComputer = 352
cloudComputingNetwork.cloud.messageDelay = 132

# Computer message delay and power constumption
cloudComputingNetwork.computer.sendMessagePowerSmart = 187
cloudComputingNetwork.computer.sendMessagePowerCloud = 333
cloudComputingNetwork.computer.receiveMessagePowerSmart = 289
cloudComputingNetwork.computer.receiveMessagePowerCloud = 314
cloudComputingNetwork.computer.messageDelay = 98

# Smartphone message delay and power constumption
cloudComputingNetwork.host[*].host.sendMessagePowerCloud = 288
cloudComputingNetwork.host[*].host.sendMessagePowerComp = 289
cloudComputingNetwork.host[*].host.receiveMessagePowerCloud = 254
cloudComputingNetwork.host[*].host.receiveMessagePowerComp = 245
cloudComputingNetwork.host[*].host.messageDelay = 113


[Config left]
**.host[0].mobility.turtleScript = xmldoc("turtle.xml", "movements//movement[@id='1']")
cloudComputingNetwork.*.left = true

[Config right]
**.host[0].mobility.turtleScript = xmldoc("turtle.xml", "movements//movement[@id='2']")
cloudComputingNetwork.*.left = false